---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-sentinel-proxy
  annotations:
    "werf.io/fail-mode": IgnoreAndContinueDeployProcess
spec:
  replicas: {{ pluck .Values.werf.env .Values.redis.sentinel.replicas | first | default .Values.redis.sentinel.replicas._default }}
  selector:
    matchLabels:
      app: redis-sentinel-proxy
  template:
    metadata:
      labels:
        app: redis-sentinel-proxy
    spec:
      affinity:
{{- if eq .Values.werf.env  "production" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - redis-sentinel-proxy
              topologyKey: "kubernetes.io/hostname"
{{- end }}
      imagePullSecrets:
      - name: "registrysecret"
      initContainers:
      - name: wait-sentinel
        image: {{ .Values.werf.image.initimage }}
        command: [ '/bin/sh', '-c', "while ! nc -z rfs-redis 26379; do sleep 1; done" ]
      - name: wait-redis
        image: {{ .Values.werf.image.initimage }}
        command: [ '/bin/sh', '-c', "while ! nc -z rfr-redis 6379; do sleep 1; done" ]
      containers:
      - name: redis-sentinel-proxy
        image: {{ .Values.werf.image.flant_redis_sentinel_proxy }}
        command: ["/usr/local/bin/redis-sentinel-proxy", "-master", "mymaster", "-sentinel", "rfs-redis:26379"]
        ports:
        - containerPort: 9999
        livenessProbe:
          initialDelaySeconds: 40
          periodSeconds: 1
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
          exec:
            command: ["redis-cli", "-p", "9999", "ping"]
        readinessProbe:
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 10
          exec:
            command: ["redis-cli", "-p", "9999", "ping"]
        resources:
          requests:
            cpu: {{ pluck .Values.werf.env .Values.redis.proxy.resources.requests.cpu | first | default .Values.redis.proxy.resources.requests.cpu._default }}
            memory: {{ pluck .Values.werf.env .Values.redis.proxy.resources.requests.memory | first | default .Values.redis.proxy.resources.requests.memory._default }}
          limits:
            memory: {{ pluck .Values.werf.env .Values.redis.proxy.resources.limits.memory | first | default .Values.redis.proxy.resources.limits.memory._default }}